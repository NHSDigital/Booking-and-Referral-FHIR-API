<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
  <PreFlow>
    <Request>
      <Step>
        <Name>FlowCallout.ApplyRateLimiting</Name>
      </Step>
    </Request>
  </PreFlow>
  <Flows>
    <Flow name="OptionsPreFlight">
      <Request/>
      <Response>
        <Step>
          <Name>AssignMessage.AddCors</Name>
        </Step>
      </Response>
      <Condition>(request.verb = "OPTIONS") and (request.header.origin != null) and (request.header.Access-Control-Request-Method != null)</Condition>
    </Flow>
    <Flow name="AddPayloadToPing">
      <Description/>
      <Request/>
      <Response>
        <Step>
          <Name>AssignMessage.AddPayloadToPing</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/_ping") and ((request.verb = "GET") or (request.verb = "HEAD"))</Condition>
    </Flow>
    <Flow name="Checks">
      <Request>
        <Step>
          <Name>RaiseFault.404PageNotFound</Name>
          <Condition>
            (proxy.pathsuffix Not Matches "/metadata")
            AND (proxy.pathsuffix Not Matches "/$process-message")
            AND (proxy.pathsuffix Not Matches "/Slot*")
            AND (proxy.pathsuffix Not Matches "/Appointment*")
            AND (proxy.pathsuffix Not Matches "/ServiceRequest*")
            AND (proxy.pathsuffix Not Matches "/registry*")
            AND (proxy.pathsuffix Not Matches "/DocumentReference*")
            AND (proxy.pathsuffix Not Matches "/MessageDefinition*")
          </Condition>
        </Step>
        <Step>
          <Name>OauthV2.VerifyAccessToken</Name>
        </Step>
      </Request>
      <Condition>(proxy.pathsuffix Not Matches "/_ping") AND (proxy.pathsuffix Not Matches "/_status")</Condition>
    </Flow>
  </Flows>
  <PostClientFlow name="PostClientFlow">
    <Response>
      <Step>
        <Name>FlowCallout.LogToSplunk</Name>
      </Step>
    </Response>
  </PostClientFlow>
  <HTTPProxyConnection>
    <BasePath>{{ SERVICE_BASE_PATH }}</BasePath>
    <VirtualHost>secure</VirtualHost>
  </HTTPProxyConnection>
  <RouteRule name="NoRoute">
    <Condition>(request.verb = "OPTIONS") and (request.header.origin != null) and (request.header.Access-Control-Request-Method != null)</Condition>
  </RouteRule>
  <RouteRule name="NoRoutePing">
    <Condition>(proxy.pathsuffix MatchesPath "/_ping") and ((request.verb = "GET") or (request.verb
      = "HEAD"))
    </Condition>
  </RouteRule>
  <RouteRule name="nrlf-consumer-route">
    <TargetEndpoint>nrlf-consumer-target</TargetEndpoint>
    <Condition>proxy.pathsuffix Matches "/DocumentReference*"</Condition>
  </RouteRule>
  <RouteRule name="booking-and-referral-target">
    <TargetEndpoint>booking-and-referral-target</TargetEndpoint>
  </RouteRule>
  <DefaultFaultRule>
    <Step>
      <Name>AssignMessage.Errors.CatchAllMessage</Name>
    </Step>
  </DefaultFaultRule>
</ProxyEndpoint>
