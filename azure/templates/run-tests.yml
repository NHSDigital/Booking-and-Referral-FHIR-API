steps:
  - bash: |
      make install-python
    workingDirectory: $(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)
    displayName: Setup pytests

  - bash: |
      export RELEASE_RELEASEID=$(Build.BuildId)
      export SOURCE_COMMIT_ID=$(Build.SourceVersion)
      export APIGEE_ENVIRONMENT="$(ENVIRONMENT)"
      export SERVICE_BASE_PATH="$(SERVICE_BASE_PATH)"
      export STATUS_ENDPOINT_API_KEY="$(status-endpoint-api-key)"
      export CLIENT_ID="not-used-on-smoketest"
      export CLIENT_SECRET="not-used-on-smoketest"
      export REDIRECT_URL="not-used-on-smoketest"

      make smoketest
    workingDirectory: $(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)
    displayName: run smoketests

  - task: PublishTestResults@2
    displayName: 'Publish smoketest results'
    condition: always()
    inputs:
      testResultsFiles: '$(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)/smoketest-report.xml'
      failTaskOnFailedTests: true

  - template: "azure/components/aws-assume-role.yml@common"
    parameters:
      role: "auto-ops"
      profile: "apm_ptl"
      
  - template: "azure/components/get-aws-secrets-and-ssm-params.yml@common"
    parameters:
     secret_file_ids:
      - ptl/app-credentials/jwt_testing/non-prod/JWT_TESTING_PRIVATE_KEY
     config_ids:
       - /ptl/azure-devops/env-int/test-app/internal-testing-int/CLIENT_ID_INT
       - /ptl/azure-devops/env-int/test-app/internal-testing-int/CLIENT_SECRET_INT

  - bash: |
      export APIGEE_ENVIRONMENT="$(ENVIRONMENT)"
      export APIGEE_API_TOKEN="$(secret.AccessToken)"
      export OAUTH_BASE_URI="https://$(ENVIRONMENT).api.service.nhs.uk"
      export OAUTH_PROXY="oauth2"
      export JWT_PRIVATE_KEY_ABSOLUTE_PATH="$(Pipeline.Workspace)/secrets/$(JWT_TESTING_PRIVATE_KEY)"
      export SERVICE_BASE_PATH="$(SERVICE_BASE_PATH)"
      export FULLY_QUALIFIED_SERVICE_NAME="$(FULLY_QUALIFIED_SERVICE_NAME)"
      export CLIENT_ID="$(CLIENT_ID_INT)"
      export CLIENT_SECRET="$(CLIENT_SECRET_INT)"
      export REDIRECT_URL="https://nhsd-apim-testing-$(ENVIRONMENT).herokuapp.com/callback"
      poetry run pytest -v tests/test_endpoints.py --junitxml=tests/patient-access-test-report.xml 
    displayName: Run integration tests
    workingDirectory: "$(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)"

  - task: PublishTestResults@2
    displayName: 'Publish integration tests results'
    condition: always()
    inputs:
      testResultsFiles: '$(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)/integration-tests-report.xml'
      failTaskOnFailedTests: true